version: '3.8'

services:
  # Service FrankenPHP
  frankenphp:
    build:
      context: .
      dockerfile: Dockerfile.frankenphp
    container_name: frankenphp_server
    ports:
      - "80:80"
    volumes:
      - ./src:/app/public
      - ./frankenphp/Caddyfile:/etc/caddy/Caddyfile
    environment:
      - SERVER_NAME=:80
      - FRANKENPHP_CONFIG="worker /app/public/index.php"
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - frankenphp-network
    restart: unless-stopped

  # Service MySQL
  mysql:
    image: mysql:8.0
    container_name: mysql_frankenphp
    environment:
      MYSQL_ROOT_PASSWORD: root_password_123
      MYSQL_DATABASE: app_database
      MYSQL_USER: app_user
      MYSQL_PASSWORD: app_password_123
    ports:
      - "3306:3306"  # Port eksternal berbeda agar tidak konflik
    volumes:
      - mysql_frankenphp_data:/var/lib/mysql
      - ./mysql:/docker-entrypoint-initdb.d
    networks:
      - frankenphp-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-proot_password_here"]
      timeout: 20s
      retries: 10
      interval: 10s
      start_period: 40s
    restart: unless-stopped

# Volume untuk data MySQL dengan nama spesifik
volumes:
  mysql_frankenphp_data:

# Network dengan nama spesifik
networks:
  frankenphp-network:
    driver: bridge